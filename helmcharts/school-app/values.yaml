# Default values for school-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}


#*************************************************************************************#
env: "preprod"
commitTrack: "some-commit-id"
preprodCommitTag: "V1.7.3"
prodCommitTag: "V1.7.2"
  
rabbitmqUrl: "amqp://rabbitmq.rabbits:5672"
mongoOplogUrl: "mongodb://school-app-mongo:27017/local?directConnection=true"
mongoUrl: "mongodb://school-app-mongo:27017/meteor?replicaSet=rs0&directConnection=true"
SERVER_SYNC_PORT: 4500
SERVER_SYNC_IP: "sync-server"
workerBackup: "dev-worker"

backSchool:
  replicas: 1
  containerPort: 3001
  PORT: 3001
  ROOT_URL: "http://localhost"
  servicePort: 3001
  serviceTargetPort: 3001
  CONSTANTS: "true"
  SETTING: "true"
  ACADEMIC_SETTINGS: "false"
  HUMAN_RESOURCE: "false"
  MESSAGES: "false"
  EVENTS_NOTES_HOMEWORK: "false"
  EXAMS: "false"
  FINANCE: "false"
  SESSIONS: "false"
  STORAGE_PATH_IMAGES: "/home/node/school/school-images/images/"
  STORAGE_PATH_FILES: "/home/node/school/school-files/files/"
  STORAGE_PATH_EXELS: "/home/node/school/school-files/excels/"
  STORAGE_PATH_VIDEOS: "/home/node/school/school-videos/videos/"
  STORAGE_PATH_AUDIOS: "/home/node/school/school-audios/audios/"
  SCHOOL_ADDRESS: "Adress"
  SCHOOL_LOGO: ""
  SCHOOL_EMAIL: "email@gg.com"
  SCHOOL_PHONE: "12345678"
  SCHOOL_NAME: "Name"
  SCHOOL_FACEBOOK: ""
  SCHOOL_YOUTUBE: ""
  SCHOOL_INSTAGRAM: ""
  SCHOOL_LINKEDIN: ""
  SCHOOL_TWITTER: ""
  SCHOOL_URL: ""
  SCHOOL_MAX_USERS: "false"
  LIMIT: "30"
  LANG_SYSTEM: "'fr'"   
  PICTURE_STORAGE: "DEV"  
  CURRENCY: false
  VACATIONS: false
  EVALUATION: false
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: "standard" 
  
emailSender:
  replicas: 1
  containerPort: 8080

frontSchool:
  replicas: 1
  containerPort: 80
  backendServer: back-school
  letsencryptEmail: admin@omegup.tn
  letsencryptHost: schoolonline.tn
  virtualHost: schoolonline.tn
  virtualPort: "80"

mongoSchool:
  replicas: 1

notifDispatcher:
  replicas: 1
  containerPort: 80

sync:
  replicas: 1

mongo:
  replicaCount: 1
  image:
    repository: mongo
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 27017
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"
  persistence:
    claim0:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: "standard" 
    claim:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: "standard" 
  volumeMounts:
    - mountPath: /data/db
      name: data-school-db
  volumes:
    - name: data-school-db
      persistentVolumeClaim:
        claimName: mongo-school
